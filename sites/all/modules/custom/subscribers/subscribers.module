<?php

/**
 * * Implements hook_permission()
 */
function subscribers_permission(){
  return array(
    'config cases' => array(
      'title' => t('Configure Cases Referrers'),
      'restricted' => TRUE
    )
  );
}

/**
 * * Implements hook_menu()
 */

function subscribers_menu() {
  $items = array();
  $items['case-subscriber'] = array(
    'page callback' => 'subscriber_check',
    'access arguments' => array('access content'),
  );

  $items['admin/config/system/subscriptions'] = array(
    'title' => 'Configure Cases Subscriptions',
    'description' => 'Configuration of Cases Referring Sites',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cases_subscription'),
    'access arguments' => array('config cases'),

  );

  return $items;
}

function cases_subscription($form, &$form_state) {
  // get default values from variable and set all values
  $form = array();
  $form['#tree'] = TRUE;
  $form['referrer_list'] = array(
    '#type' => 'fieldset',
    '#title' => t('URLs of valid referrers for Cases'),
    '#prefix' => '<div id="referrer_list-wrapper">',
    '#suffix' => '</div>',
  );

  if (empty($form_state['num_refs'])) {
    if ($var = unserialize(variable_get('cases_referrers' , ''))) {
      $form_state['num_refs'] = count($var);
    } else {
      $form_state['num_refs'] = 1;
    }
  }

  for ($i = 0; $i < $form_state['num_refs']; $i++) {
    $form['referrer_list']['ref_'][$i] = array(
      '#type' => 'textfield',
      '#title' => t('Referrer URL. Include protocol like http or https'),
    );
  }

  if (isset($var)) {
    for ($i = 0; $i < $form_state['num_refs']; $i++) {
      $form['referrer_list']['ref_'][$i]['#default_value']  = $var[$i];
    }
  }

  $form['referrer_list']['add_name'] = array(
   '#type' => 'submit',
   '#value' => t('Add one more'),
   '#submit' => array('ajax_add_one_more'),

   '#ajax' => array(
     'callback' => 'ajax_add_one_more_callback',
     'wrapper' => 'referrer_list-wrapper',
   ),
 );
 $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

function cases_subscription_validate($form, &$form_state) {
  $nform = array();
  $x = 0;
  for ($i = 0; $i < $form_state['num_refs']; $i++) {
    if ($url = $form_state['values']['referrer_list']['ref_'][$i]) {
      if($response = file_get_contents($url)) {
        $nform['values']['referrer_list']['ref_'][$x] = $url;
        $x++;
      } else  {
        $field = "referrer_list']['ref_']$i";
        form_set_error($field , "$url is an Invalid URL");
      }
    }
  }
  // We may have had some blanks in the form values..so Lets reset all of form_state values
  if ($x != $form_state['num_refs']) {
    for ($i = 0; $i < $form_state['num_refs']; $i++) {
      unset($form_state['values']['referrer_list']['ref_'][$i]);
    }
    for ($i = 0; $i < $x; $i++) {
      $form_state['values']['referrer_list']['ref_'][$i] = $nform['values']['referrer_list']['ref_'][$i];
    }
    $form_state['num_refs'] = $x;
  }
}

function cases_subscription_submit($form, &$form_state) {
  $var = array();
  for ($i = 0; $i < $form_state['num_refs']; $i++) {
    $var[$i] = $form_state['values']['referrer_list']['ref_'][$i];
  }
  variable_set('cases_referrers' , serialize($var));
}

function ajax_add_one_more($form, &$form_state) {
  $form_state['num_refs']++;
  $form_state['rebuild'] = TRUE;
}

function ajax_add_one_more_callback($form, $form_state) {
  return $form['referrer_list'];
}

function subscriber_check() {
  $referrer = trim($_SERVER['HTTP_REFERER']);
  drupal_set_message("the referer is $referer");
  $valid_referrer = unserialize(variable_get('cases_referrers' , ''));
  $ct = count($valid_referrer);
  $valid = FALSE;
  $x = 0;
  while ($x < $ct && !($valid)) {
    $valid = ($referer == trim($valid_referrer[$x]));
    $x++;
  }
  if ($valid) {
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type' , 'user')
      ->propertyCondition('status' , 1)
      ->propertyCondition('name', 'Subscription User');

    $result = $query->execute();
    if (array_key_exists('user' , $result)) {
      $uid = key($result['user']);
      $user = user_load($uid);
      $GLOBALS['user'] = $user;
      $form_state['uid'] = $uid;
      user_login_finalize($form_state);

      $done = FALSE;
      $x = 0;
      $arg_ary = array();
      while (!$done) {
        $arg = arg($x);
        if ($arg) {
          $arg_ary[] = $arg;
          $x++;
        } else {
          $done = TRUE;
        }
      }
      unset($arg_ary[0]); // this is case-subsriber
      $uri = implode('/', $arg_ary);
      drupal_goto($uri);
    }
  }
}
