<?php

/**
 * @file
 * Main file for warpwiremc module.
 */

/**
 * Implementation of hook_init().
 */
function warpwiremc_init() { }

/**
 * Implementation of hook_menu().
 */
function warpwiremc_menu() { }

/**
 * Implementation of hook_filter_info().
 */
function warpwiremc_filter_info() {

  cache_clear_all('*', 'cache_filter', TRUE);
  cache_clear_all('*', 'cache_field', TRUE);

  $filters['filter_html'] = array(
    'title' => t('Warpwire Filter - Filtered HTML'),
    'description' => t('Substitutes [warpwire:URL] and [mediacore:URL] with secure Warpwire player.'),
    'process callback' => 'warpwiremc_filter',
    'tips callback'  => 'warpwiremc_tips',
    'cache' => FALSE,
  );

  $filters['full_html'] = array(
    'title' => t('Warpwire Filter - Full HTML'),
    'description' => t('Substitutes [warpwire:URL] and [mediacore:URL] with secure Warpwire player.'),
    'process callback' => 'warpwiremc_filter',
    'tips callback'  => 'warpwiremc_tips',
    'cache' => FALSE,
  );

  return $filters;
}

/**
 * Implementation of hook_filter_tips().
 */
function warpwiremc_tips($delta, $format, $long = FALSE) {
  if ($long) {
    return t('You may insert videos from your Warpwire Media Libraries sites by embedding tags in the following manner: <code>[warpwire:URL]</code>.');
  }
  else {
    return t('You may insert Warpwire media with [warpwire:URL]');
  }
}

/**
 * Filter
 * Find [mediacore:URL] and replace them with warpwire embed iframes
 *
 * @param string $text
 * @param string $filter
 * @param string $format
 * @param string $langcode
 * @param string $cache
 * @param string $cache_id
 * @return string
 */

// function to translate Mediacore urls into Warpwire urls
function warpwiremc_filter($text, $filter, $format, $langcode, $cache, $cache_id) {
  global $user;

  $text = warpwire_filter($text, $filter, $format, $langcode, $cache, $cache_id);

  if (preg_match_all('/\[mediacore(\:(.+))?( .+)?\](.+)?\/a>/isU', $text, $matches_code)) {

    foreach ($matches_code[0] as $index => $code) {
      $textToReplace = $matches_code[0][$index];

      $url = '';
      if (!empty($matches_code[3][$index])) {
        $url = preg_replace('/^ href=("|\')/','',$matches_code[3][$index]);
      }

      $url_parts = parse_url($url);

      if(isset($url_parts['path']) && !empty($url_parts['path']) ) {
        $url = rtrim(variable_get('warpwire_url'), '/') . $url_parts['path'];

				$parameters = array();
				if(!empty($url_parts['query']))
					parse_str($url_parts['query'], $parameters);

				if(!isset($parameters['share']) && (variable_get('warpwire_share_default') == 0))
					$parameters['share'] = 'false';

				if(!isset($parameters['title']) && (variable_get('warpwire_title_default') == 0))
					$parameters['title'] = 'false';

				$url_parts['query'] = http_build_query($parameters);

				if(isset($url_parts['query']) && !empty($url_parts['query']) ) {
					$url .= '?' . $url_parts['query'];
				}

        if(user_is_logged_in()) {

          $parts = array(
            'q' => 'warpwire/external_content',
            'url' => $url
          );

          $partsString = http_build_query($parts);

          $url = '/?' . $partsString;
        }
      }

      $video = array(
        'width' => '560', 'height' => '315'
      );

      // build the iframe html
      $template = '<iframe src="URL"
        width="WIDTH"
        height="HEIGHT"
        frameborder="0"
        allowfullscreen="allowfullscreen"
        mozallowfullscreen="mozallowfullscreen"
        webkitallowfullscreen="webkitallowfullscreen">
        </iframe>';
      $patterns = array('/URL/', '/WIDTH/', '/HEIGHT/');
      $replace = array($url, $video['width'], $video['height']);
      $iframe_html = preg_replace($patterns, $replace, $template);

      // replace the shortcode with the iframe html
      $text = str_replace($code, $iframe_html, $text);
    }
  }

  if (preg_match_all('/\[mediacore(\:(.+))?( .+)?\]/isU', $text, $matches_code)) {

    foreach ($matches_code[0] as $ci => $code) {

      $video = array(
        'source' => $matches_code[2][$ci], 'width' => '560', 'height' => '315'
      );

      if ($matches_code[3][$ci] &&
          preg_match_all('/\s+([a-zA-Z_]+)\:(\s+)?([0-9a-zA-Z\/]+)/i', $matches_code[3][$ci], $matches_attributes)) {
        foreach ($matches_attributes[0] AS $ai => $attribute) {
          $video[$matches_attributes[1][$ai]] = $matches_attributes[3][$ai];
        }
      }

      $url = $video['source'];
      
      $url_parts = parse_url($video['source']);
      if(isset($url_parts['path']) && !empty($url_parts['path']) ) {
        $url = rtrim(variable_get('warpwire_url'), '/') . $url_parts['path'];

				$parameters = array();
				if(!empty($url_parts['query']))
					parse_str($url_parts['query'], $parameters);

				if(!isset($parameters['share']) && (variable_get('warpwire_share_default') == 0))
					$parameters['share'] = 'false';

				if(!isset($parameters['title']) && (variable_get('warpwire_title_default') == 0))
					$parameters['title'] = 'false';

				$url_parts['query'] = http_build_query($parameters);

				if(isset($url_parts['query']) && !empty($url_parts['query']) ) {
					$url .= '?' . $url_parts['query'];
				}

        if(user_is_logged_in()) {

          $parts = array(
            'q' => 'warpwire/external_content',
            'url' => $url
          );

          $partsString = http_build_query($parts);

          $url = '/?' . $partsString;
        }
      }

      // build the iframe html
      $template = '<iframe src="URL"
        width="WIDTH"
        height="HEIGHT"
        frameborder="0"
        allowfullscreen="allowfullscreen"
        mozallowfullscreen="mozallowfullscreen"
        webkitallowfullscreen="webkitallowfullscreen">
        </iframe>';
      $patterns = array('/URL/', '/WIDTH/', '/HEIGHT/');
      $replace = array($url, $video['width'], $video['height']);
      $iframe_html = preg_replace($patterns, $replace, $template);

      // replace the shortcode with the iframe html
      $text = str_replace($code, $iframe_html, $text);
    }
  }

  return $text;
}
